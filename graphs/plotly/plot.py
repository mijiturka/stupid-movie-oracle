import json
import pathlib
import logging

import argparse

import plotly.express as px

def from_report(path):
    return json.loads(path.read_text())

def is_positive(value):
    return value.count('+') == len(value)

def is_negative(value):
    return value.count('-') == len(value)

if __name__ == '__main__':

    parser = argparse.ArgumentParser()

    movie_args = parser.add_mutually_exclusive_group(required=True)
    movie_args.add_argument('--movie', metavar='NAME', type=str,
        help='Usable movie name, e.g as generated by watch.py. \
            Plotter will use it to look for a file \
            and expect it to contain watch data')
    movie_args.add_argument('--file', metavar='PATH', type=str,
        help='File containing watch data')

    args = parser.parse_args()

    if args.movie is not None:
        path = pathlib.Path(f'../../data/{args.movie}_report.json')
    elif args.file is not None:
        path = pathlib.Path(args.file)

    data = from_report(path)

    timestamps = data['fun'].keys()
    fun = []

    for value in data['fun'].values():
        quantity = len(value)
        if is_positive(value):
            fun.append(quantity)
        elif is_negative(value):
            fun.append(-quantity)
        else:
            logging.warning(f'Ignoring value {value}')

    fig = px.scatter(x=timestamps, y=fun)
    fig.show()
